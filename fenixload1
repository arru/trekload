#!/bin/sh --

if [ $# -gt 2 ]
then
  echo "Too many arguments - ignored"
  
  #exit $E_BADARGS
fi

#save file list separator so we can change it during script run
SAVEIFS=$IFS

OPTIND=1         # Reset in case getopts has been used previously in the shell.

#set file list separator to something else so we can work with spaces in file/dir names
IFS=":"

HOMEDIR=~/
SOURCE="${HOMEDIR}Desktop"
DESTINATION="/Volumes/GARMIN/Garmin/GPX"
#DESTINATION="${HOMEDIR}Desktop"

#abort if destination directory does not exists - meaning Fenix is not connected
if [ ! -d "$DESTINATION" ]; then
    echo "Can't find Fenix GPX directory. Is it properly connected?"
    exit 0
fi

FILES="$SOURCE/*.kml"

### default parameter values ###

TYPEFILTER="tracks"

### parse arguments and alter parameters accordingly ###

while getopts "tge:" opt; do
    case "$opt" in
    t)
      TYPEFILTER=""
      echo "Retaining track data"
      ;;
    g|e)  
      FILES="${HOMEDIR}Library/Application Support/Google Earth/myplaces.kml"
      echo "Using My Places from Google Earth"
      ;;
    esac
done

# Start looping over files
for KML in ${FILES}; do
  #determine stem file name
  NAME=${KML%.kml}
  NAME=${NAME##*/}
  
  OUTPUT="${DESTINATION}/${NAME}.gpx"

  #run conversion
  if [ -n "$TYPEFILTER" ]; then
    gpsbabel -i kml -f "${KML}" -x nuketypes,${TYPEFILTER} -o gpx -F "${OUTPUT}"
  else
    gpsbabel -i kml -o gpx "${KML}" "${OUTPUT}"
  fi
  
  #check for success
  if [ $? -ne 0 ]; then
    # If gpsbabel failed, then say so and exit loop.
    echo "FAILED converting stream ${NAME}, exiting."; IFS=$SAVEIFS; exit 1; 
  fi
  
done # End of file loop

echo

IFS=$SAVEIFS

# Exit.
exit 0